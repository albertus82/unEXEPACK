<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>io.github.albertus82</groupId>
	<artifactId>unexepack</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>unEXEPACK</name>
	<url>https://github.com/albertus82/unEXEPACK</url>
	<description>Unpacker for Microsoft EXEPACK utility compressor.</description>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://opensource.org/licenses/MIT</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>albertus82</name>
			<email>albertus82&lt;at&gt;pm.me</email>
			<organization>albertus82-github</organization>
			<organizationUrl>https://github.com/albertus82</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:https://github.com/albertus82/unEXEPACK.git</connection>
		<developerConnection>scm:git:https://github.com/albertus82/unEXEPACK.git</developerConnection>
		<url>https://github.com/albertus82/unEXEPACK</url>
	</scm>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<main.class>${project.groupId}.${project.artifactId}.UnExepack</main.class>
		<dependencies.directory>lib</dependencies.directory>
		<thirdparty.license.directory>3rdparty</thirdparty.license.directory>
		<lombok.version>1.18.20</lombok.version>
		<picocli.version>4.6.2</picocli.version>
		<maven.version.rules>${project.baseUri}/maven-version-rules.xml</maven.version.rules>
		<vm.initialHeapSize>4</vm.initialHeapSize>
		<vm.maxHeapSize>32</vm.maxHeapSize>
	</properties>

	<profiles>
		<profile>
			<id>javac-release-option</id>
			<activation>
				<jdk>[9,)</jdk>
			</activation>
			<properties>
				<maven.compiler.release>8</maven.compiler.release>
			</properties>
		</profile>

		<profile>
			<id>skip-gpg</id>
			<activation>
				<property>
					<name>!env.MAVEN_GPG_PASSPHRASE</name>
				</property>
			</activation>
			<properties>
				<gpg.skip>true</gpg.skip>
			</properties>
		</profile>

		<profile>
			<id>codeql</id>
			<properties>
				<lombok.outputDirectory>${project.build.directory}/generated-sources/delombok</lombok.outputDirectory>
				<lombok.testOutputDirectory>${project.build.directory}/generated-test-sources/delombok</lombok.testOutputDirectory>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok-maven-plugin</artifactId>
						<version>${lombok.version}.0</version>
						<executions>
							<execution>
								<id>delombok</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>delombok</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
								</configuration>
							</execution>
							<execution>
								<id>delombok-test</id>
								<phase>generate-test-sources</phase>
								<goals>
									<goal>testDelombok</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<addOutputDirectory>false</addOutputDirectory>
							<verbose>true</verbose>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>replace-sources</id>
								<phase>process-sources</phase>
								<configuration>
									<target>
										<ant target="codeql-delombok" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>replace-test-sources</id>
								<phase>process-test-sources</phase>
								<configuration>
									<target>
										<ant target="codeql-delombok-test" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<finalName>${project.artifactId}</finalName>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>${project.basedir}</directory>
				<includes>
					<include>LICENSE*</include>
					<include>NOTICE*</include>
					<include>README*</include>
				</includes>
				<targetPath>META-INF</targetPath>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.properties</exclude>
				</excludes>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${project.basedir}</directory>
							<includes>
								<include>lombok.config</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>4.0.5</version>
				<executions>
					<execution>
						<goals>
							<goal>revision</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
				</executions>
				<configuration>
					<dateFormat>yyyy-MM-dd'T'HH:mm:ssXXX</dateFormat>
					<dateFormatTimeZone>Z</dateFormatTimeZone>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<enforceBytecodeVersion>
									<maxJdkVersion>${maven.compiler.target}</maxJdkVersion>
								</enforceBytecodeVersion>
								<requireMavenVersion>
									<version>3.3.9</version>
								</requireMavenVersion>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>extra-enforcer-rules</artifactId>
						<version>1.5.1</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>animal-sniffer-maven-plugin</artifactId>
				<version>1.20</version>
				<executions>
					<execution>
						<phase>process-classes</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<signature>
						<groupId>org.codehaus.mojo.signature</groupId>
						<artifactId>java18</artifactId>
						<version>1.0</version>
					</signature>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<outputTimestamp>${git.commit.time}</outputTimestamp>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<mainClass>${main.class}</mainClass>
							<addClasspath>true</addClasspath>
							<classpathPrefix>${dependencies.directory}/</classpathPrefix>
						</manifest>
						<manifestEntries>
							<X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
							<X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<useBaseVersion>false</useBaseVersion>
							<outputDirectory>${project.build.directory}/${dependencies.directory}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>parse-version</id>
						<goals>
							<goal>parse-version</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>lombok-config</id>
						<phase>initialize</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<ant target="lombok-config" />
							</target>
						</configuration>
						<?m2e execute?>
					</execution>
					<execution>
						<id>launch4j</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<ant target="launch4j" />
							</target>
						</configuration>
					</execution>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<ant target="checksums" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<finalName>${project.artifactId}-${project.version}</finalName>
				</configuration>
				<executions>
					<execution>
						<id>unix</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<outputTimestamp>${git.commit.time}</outputTimestamp>
							<descriptors>
								<descriptor>src/assembly/unix.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<id>windows</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<outputTimestamp>${git.commit.time}</outputTimestamp>
							<descriptors>
								<descriptor>src/assembly/windows.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.8.1</version>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>display-property-updates</goal>
							<goal>display-dependency-updates</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.3.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<gpgArguments>
						<arg>--pinentry-mode</arg>
						<arg>loopback</arg>
					</gpgArguments>
					<passphrase>${env.MAVEN_GPG_PASSPHRASE}</passphrase>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<dependencies>
		<!-- Compile -->
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli.version}</version>
			<optional>true</optional>
		</dependency>
		<!-- Provided -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli-codegen</artifactId>
			<version>${picocli.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.15</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.21</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.tukaani</groupId>
			<artifactId>xz</artifactId>
			<version>1.9</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
